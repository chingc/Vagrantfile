# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative "../settings"


Vagrant.configure("2") do |config|

    config.vm.box = "win10-20171019"  # https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/
    config.vm.guest = "windows"
    config.vm.hostname = Settings::NAME

    config.vm.provider "virtualbox" do |vbox|
        vbox.gui = true
        vbox.linked_clone = true

        Settings::VBOX.each do |setting, value|
            vbox.customize ["modifyvm", :id, setting, value]
        end
    end

    # For `vagrant up` to succeed, open an Administrative PowerShell and run these commands:
    # 1. sc.exe config "WinRM" start= auto  # Change "Startup type" from "Automatic (Delayed Start)" to "Automatic"
    # 2. Enable-PSRemoting -SkipNetworkProfileCheck -Force  # Allow Vagrant to successfully communicate with the box
    config.vm.communicator = "winrm"
    config.winrm.username = "IEUser"
    config.winrm.password = "Passw0rd!"
    config.winrm.timeout = 180

    config.ssh.username = "IEUser"
    config.ssh.password = "Passw0rd!"
    config.ssh.extra_args = "powershell"

    # config.vm.network "forwarded_port", guest: 80, host: 8080, auto_correct: true
    # config.vm.network "public_network"

    # config.vm.synced_folder "source", "C:/dest"

    Dir.glob("run_once/*.ps1").sort.each do |script|
        config.vm.provision "shell", path: script, name: script
    end

    Dir.glob("run_always/*.ps1").sort.each do |script|
        config.vm.provision "shell", path: script, name: script, run: "always"
    end

    config.vm.post_up_message = <<~MSG
        - Resolution too low? `VBoxManage controlvm "#{Settings::NAME}" setvideomodehint 1440 900 32`
        - Just provisioned? `vagrant reload` recommended
    MSG

end
